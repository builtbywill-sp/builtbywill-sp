
# FES Day X: Flexbox Layout
**Date:** April 21, 2025

---

## ðŸ§  Core Concepts

- `display: flex;` âž¤ Activates Flexbox layout; default direction is `row`.
- `justify-content` âž¤ Controls **horizontal alignment** (main axis).
  - `center`, `flex-start`, `flex-end`, `space-between`, `space-around`
- `align-items` âž¤ Controls **vertical alignment** (cross axis).
  - `center`, `flex-start`, `flex-end`, `stretch`
- You can combine:
  - `display: flex;`
  - `justify-content: center;`
  - `align-items: center;`
- âœ… `flex-direction: column` flips the axes
  - Now `justify-content` = vertical control
  - `align-items` = horizontal control

---

## ðŸ§± Layout Principle

> The **parent container** controls the position of child elements in Flexbox.

---

## ðŸ’» Code Example: Centering with Flexbox

```css
.container {
  width: 100%;
  height: 300px;
  border: 2px solid red;
  display: flex;
  justify-content: center;
  align-items: center;
}

.box {
  width: 100px;
  height: 100px;
  border: 2px solid black;
}
```

---

## ðŸ§™ Flexbox Cheat Sheet Reference
- `justify-content`: horizontal alignment (Harry)
- `align-items`: vertical alignment (Hermione)

[Visual included in class materials]

---

## ðŸŽ¯ Summary

Flexbox is your tool for **moving things around** inside a container. Combine the core properties to control layout along both axes. Start with practice â€” and yes, Flexbox Froggy is a great way to master it.

---

#BuiltByWill | FES Note Codex
